AWSTemplateFormatVersion: '2010-09-09'
Description: Quick start based Bastion template
Parameters:
  NameSpace:
    Type: String
    Default: 'PersonalCapital'
  KeyPairName:
    Description: Enter a Public/private key pair. If you do not have one in this region, please create it before continuing
    Type: AWS::EC2::KeyPair::KeyName
  VpcId:
    Type: String
    Description: VPC ID
  PublicSubnet1Id:
    Type: String
    Description: Public Subnet 1 Id
  PublicSubnet2Id:
    Type: String
    Description: Public Subnet 2 Id

Mappings:
  AWSAMIRegionMap:
    us-east-1:
      AMZNLINUXHVM: ami-0080e4c5bc078760e
    us-east-2:
      AMZNLINUXHVM: ami-0cd3dfa4e37921605
    us-west-1:
      AMZNLINUXHVM: ami-0ec6517f6edbf8044
    us-west-2:
      AMZNLINUXHVM: ami-01e24be29428c15b2
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref 'BastionMainLogGroup'
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: '1'
          MetricNamespace: !Join
            - /
            - - AWSQuickStart
              - !Ref 'AWS::StackName'
  BastionHostRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
  BastionHostPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:GetObject
            Resource: arn:aws:s3:::aws-quickstart/quickstart-linux-bastion/*
            Effect: Allow
          - Action:
              - logs:CreateLogStream
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
              - logs:PutMetricFilter
              - logs:CreateLogGroup
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
            Effect: Allow
          - Action:
              - ec2:AssociateAddress
              - ec2:DescribeAddresses
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref 'BastionHostRole'
  BastionHostProfile:
    DependsOn: BastionHostPolicy
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref 'BastionHostRole'
      Path: /
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref 'BastionLaunchConfiguration'
      VPCZoneIdentifier:
        - !Ref 'PublicSubnet1Id'
        - !Ref 'PublicSubnet2Id'
      MinSize: 2
      MaxSize: 2
      Cooldown: '300'
      DesiredCapacity: 2
    CreationPolicy:
      ResourceSignal:
        Count: 2
        Timeout: PT30M
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref 'BastionHostRole'
          buckets: aws-quickstart
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/bastion_bootstrap.sh:
              source: https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/bastion_bootstrap.sh
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            b-bootstrap:
              command: !Join
                - ''
                - - ./tmp/bastion_bootstrap.sh
                  - ' --tcp-forwarding true --x11-forwarding false'
    Properties:
      AssociatePublicIpAddress: true
      KeyName: !Ref 'KeyPairName'
      IamInstanceProfile: !Ref 'BastionHostProfile'
      ImageId:  !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - 'AMZNLINUXHVM'
      SecurityGroups:
        - !Ref 'BastionSecurityGroup'
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp2
            DeleteOnTermination: true
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash\n"
            - "set -x\n"
            - "export PATH=$PATH:/usr/local/bin\n"
            - "which pip &> /dev/null\n"
            - "if [ $? -ne 0 ] ; then\n"
            - "    yum install -y epel-release; yum install -y python-pip\n"
            - "fi\n"
            - "pip install --upgrade pip &> /dev/null\n"
            - "pip install awscli --ignore-installed six &> /dev/null\n"
            - "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n"
            - EIP_LIST="
            - !Ref 'EIP1'
            - ','
            - !Ref 'EIP2'
            - "\"\n"
            - CLOUDWATCHGROUP=
            - !Ref 'BastionMainLogGroup'
            - "\n"
            - 'cfn-init -v --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionLaunchConfiguration --region '
            - !Ref 'AWS::Region'
            - "\n"
            - 'cfn-signal -e $? --stack '
            - !Ref 'AWS::StackName'
            - ' --resource BastionAutoScalingGroup --region '
            - !Ref 'AWS::Region'
            - "\n"
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !Ref 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
Outputs:
  BastionAutoScalingGroup:
    Description: Auto Scaling Group Reference ID
    Value: !Ref 'BastionAutoScalingGroup'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "BastionAutoScalingGroup"] ]
  EIP1:
    Description: Elastic IP 1 for Bastion
    Value: !Ref 'EIP1'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "EIP1"] ]
  EIP2:
    Description: Elastic IP 2 for Bastion
    Value: !Ref 'EIP2'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "EIP2"] ]
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref 'BastionMainLogGroup'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "CloudWatchLogs"] ]
  BastionSecurityGroupID:
    Description: Bastion Security Group ID
    Value: !Ref 'BastionSecurityGroup'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "BastionSecurityGroup"] ]
  BastionHostRole:
    Description: Bastion IAM Role name
    Value: !Ref 'BastionHostRole'
    Export:
      Name: !Join [ ":", [ "Bastion", !Ref "NameSpace", "BastionHostRole"] ]
